{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport gq from '../api/gq';\nimport { GlobalStyles, InfiniteBox, CatThumbnail } from '../components';\n\nvar Page = function Page() {\n  return __jsx(React.Fragment, null, __jsx(GlobalStyles, null), __jsx(\"h1\", null, \"Cat API\"), __jsx(InfiniteBox, {\n    title: 'Breeds',\n    pageSize: 12,\n    itemComponent: CatThumbnail,\n    createQuery: function createQuery(skip, limit) {\n      return \"{\\n\\t\\t\\t\\titems: breedMany (limit:\".concat(limit, \", skip:\").concat(skip, \") {\\n\\t\\t\\t\\t\\tname\\n\\t\\t\\t\\t\\tpicture\\n\\t\\t\\t\\t\\tdescription\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\");\n    }\n  }));\n};\n\nPage.getInitialProps = function _callee() {\n  var data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(gq(\"{\\n\\t\\tbreedCount\\n\\t\\tcountryCount\\n\\t}\"));\n\n        case 2:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/vladislavzhabinsky/coding/job-applications/telia/src/app/client/pages/index.tsx"],"names":["React","gq","GlobalStyles","InfiniteBox","CatThumbnail","Page","skip","limit","getInitialProps","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,WAAf;AACA,SAASC,YAAT,EAAsBC,WAAtB,EAAkCC,YAAlC,QAAsD,eAAtD;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,SACZ,MAAC,KAAD,CAAO,QAAP,QACC,MAAC,YAAD,OADD,EAEC,4BAFD,EAGC,MAAC,WAAD;AACC,IAAA,KAAK,EAAE,QADR;AAEC,IAAA,QAAQ,EAAE,EAFX;AAGC,IAAA,aAAa,EAAED,YAHhB;AAIC,IAAA,WAAW,EAAE,qBAACE,IAAD,EAAcC,KAAd;AAAA,0DACcA,KADd,oBAC6BD,IAD7B;AAAA;AAJd,IAHD,CADY;AAAA,CAAb;;AAmBAD,IAAI,CAACG,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHP,EAAE,4CADC;;AAAA;AAChBQ,UAAAA,IADgB;AAAA,2CAKf;AACNA,YAAAA,IAAI,EAAJA;AADM,WALe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAUA,eAAeJ,IAAf","sourcesContent":["import React from 'react';\nimport gq from '../api/gq';\nimport { GlobalStyles,InfiniteBox,CatThumbnail } from '../components';\n\nconst Page = () => (\n\t<React.Fragment>\n\t\t<GlobalStyles />\n\t\t<h1>Cat API</h1>\n\t\t<InfiniteBox\n\t\t\ttitle={'Breeds'}\n\t\t\tpageSize={12}\n\t\t\titemComponent={CatThumbnail}\n\t\t\tcreateQuery={(skip: number,limit: number) => `{\n\t\t\t\titems: breedMany (limit:${limit}, skip:${skip}) {\n\t\t\t\t\tname\n\t\t\t\t\tpicture\n\t\t\t\t\tdescription\n\t\t\t\t}\n\t\t\t}`}\n\t\t/>\n\t</React.Fragment>\n);\n\nPage.getInitialProps = async () => {\n\tconst data = await gq(`{\n\t\tbreedCount\n\t\tcountryCount\n\t}`);\n\treturn {\n\t\tdata\n\t};\n};\n\nexport default Page;"]},"metadata":{},"sourceType":"module"}