{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\n\nvar Button = function Button(props) {\n  var className = props.className,\n      _props$ripple = props.ripple,\n      ripple = _props$ripple === void 0 ? true : _props$ripple,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square;\n  return __jsx(\"button\", {\n    className: classnames(className, {\n      ripple: ripple,\n      square: square\n    })\n  }, \"hey\");\n};\n\nexport default styled(Button).withConfig({\n  displayName: \"Button\",\n  componentId: \"sc-13sr2zm-0\"\n})([\"background:red;font-size:16px;text-transform:uppercase;cursor:pointer;color:white;background-color:red;box-shadow:0 0 4px #999;outline:none;border:none;&.ripple{background-position:center;transition:background 0.8s;}&.ripple:hover{background:\", \";}&.ripple:active{background-color:rgba(0,0,0,0.2);background-size:100%;transition:background 0s;}&.square{padding:10px;border-radius:50%;}&:not(.square){padding:5px 10px;border-radius:4px;}\"], function (_ref) {\n  var _ref$backgroundColor = _ref.backgroundColor,\n      backgroundColor = _ref$backgroundColor === void 0 ? 'red' : _ref$backgroundColor;\n  return \"\".concat(backgroundColor, \" radial-gradient(circle, transparent 1%, \").concat(backgroundColor, \" 1%) center/15000%\");\n});","map":{"version":3,"sources":["/Users/vladislavzhabinsky/coding/job-applications/telia/app/client/ui/Button.tsx"],"names":["React","styled","classnames","Button","props","className","ripple","square","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAA+D,OAA/D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAUA,IAAMC,MAAgC,GAAG,SAAnCA,MAAmC,CAACC,KAAD,EAAkB;AAAA,MAClDC,SADkD,GACPD,KADO,CAClDC,SADkD;AAAA,sBACPD,KADO,CACxCE,MADwC;AAAA,MACxCA,MADwC,8BAC/B,IAD+B;AAAA,sBACPF,KADO,CAC1BG,MAD0B;AAAA,MAC1BA,MAD0B,8BACjB,KADiB;AAE1D,SAAO;AAAQ,IAAA,SAAS,EAAEL,UAAU,CAACG,SAAD,EAAW;AAAEC,MAAAA,MAAM,EAANA,MAAF;AAASC,MAAAA,MAAM,EAANA;AAAT,KAAX;AAA7B,WAAP;AACA,CAHD;;AAKA,eAAeN,MAAM,CAACE,MAAD,CAArB;AAAA;AAAA;AAAA,6bAgBgB;AAAA,kCAAGK,eAAH;AAAA,MAAGA,eAAH,qCAAqB,KAArB;AAAA,mBAAoCA,eAApC,sDAA+FA,eAA/F;AAAA,CAhBhB","sourcesContent":["import React,{ ReactElement,FunctionComponent,Component } from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\n\ninterface Props {\n\tclassName?: string;\n\tchildren?: any;\n\tripple?: boolean;\n\tsquare?: boolean;\n\tbackgroundColor?: string;\n}\n\nconst Button: FunctionComponent<Props> = (props: Props) => {\n\tconst { className,ripple = true,square = false } = props;\n\treturn <button className={classnames(className,{ ripple,square })}>hey</button>;\n};\n\nexport default styled(Button)`\n\tbackground: red;\n\tfont-size: 16px;\n\ttext-transform: uppercase;\n\tcursor: pointer;\n\tcolor: white;\n\tbackground-color: red;\n\tbox-shadow: 0 0 4px #999;\n\toutline: none;\n\tborder: none;\n\n\t&.ripple {\n\t\tbackground-position: center;\n\t\ttransition: background 0.8s;\n\t}\n\t&.ripple:hover {\n\t\tbackground: ${({ backgroundColor = 'red' }) => `${backgroundColor} radial-gradient(circle, transparent 1%, ${backgroundColor} 1%) center/15000%`};\n\t}\n\t&.ripple:active {\n\t\tbackground-color: rgba(0,0,0,0.2);\n\t\tbackground-size: 100%;\n\t\ttransition: background 0s;\n\t}\n\n\t&.square {\n\t\tpadding: 10px;\n\t\tborder-radius: 50%;\n\t}\n\t&:not(.square) {\n\t\tpadding: 5px 10px;\n\t\tborder-radius: 4px;\n\t}\n`;\n"]},"metadata":{},"sourceType":"module"}