{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\n\nvar CatThumbnail = function CatThumbnail(props) {\n  var picture = props.picture,\n      name = props.name,\n      className = props.className;\n  /**\n   * We check what orientation Image is to apply different\n   * styling optinon to insure that the image covers the thumbnail fully\n   * \n   * For now, we will assume that the image is square\n   */\n\n  var _React$useState = React.useState([1, 1]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      size = _React$useState2[0],\n      setSize = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isMouseOver = _React$useState4[0],\n      setMouseOver = _React$useState4[1]; // if image is horizontal, we scale it up to fill the container\n\n\n  var imageScale = (isMouseOver ? 0.03 : 0) + 1.1 + Math.max(0, 1 - size[0] / size[1]);\n  var imageUrl = \"/public-assets/\".concat(picture);\n  var isLoading = size[0] === 1;\n\n  var onLoadedImage = function onLoadedImage(e) {\n    var image = e.target;\n    var width = image.width,\n        height = image.height;\n\n    if (width === size[0] && width === size[1]) {\n      // image dimensions haven't changes\n      // no need to perform the update\n      return;\n    }\n\n    setSize([width, height]);\n  };\n\n  return __jsx(\"article\", {\n    className: classnames(className, {\n      hover: isMouseOver,\n      loading: isLoading\n    })\n  }, __jsx(\"div\", {\n    className: \"head\"\n  }, __jsx(\"img\", {\n    onMouseEnter: function onMouseEnter() {\n      return setMouseOver(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setMouseOver(false);\n    },\n    style: {\n      transform: \"scale(\".concat(imageScale, \")\")\n    },\n    src: imageUrl,\n    alt: \"Breed: \".concat(name),\n    onLoad: onLoadedImage\n  })), __jsx(\"div\", {\n    className: \"body\"\n  }, __jsx(\"h4\", null, name)));\n};\n\nexport default styled(CatThumbnail).withConfig({\n  displayName: \"CatThumbnail\",\n  componentId: \"sc-1inwxc8-0\"\n})([\"position:relative;display:flex;flex-direction:column;.head{width:100%;position:relative;overflow:hidden;padding-top:70%;border-radius:10px;cursor:pointer;}img{position:absolute;top:0;left:0;width:100%;}img.loaded{transition:transform 0.1s ease-in;}img,.body{transition:opacity 1s ease-in;}&.loading img,&.loading .body{opacity:0;}h4{margin:10px 0 0 0;}\"]);","map":null,"metadata":{},"sourceType":"module"}