{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\n\nconst CatThumbnail = props => {\n  const {\n    picture,\n    name,\n    className\n  } = props;\n  /**\n   * We check what orientation Image is to apply different\n   * styling optinon to insure that the image covers the thumbnail fully\n   * \n   * For now, we will assume that the image is square\n   */\n\n  const [size, setSize] = React.useState([1, 1]);\n  const [isMouseOver, setMouseOver] = React.useState(false); // if image is horizontal, we scale it up to fill the container\n\n  const imageScale = (isMouseOver ? 0.03 : 0) + 1.1 + Math.max(0, 1 - size[0] / size[1]);\n  const imageUrl = `/public-assets/${picture}`;\n  const isLoading = size[0] === 1;\n\n  const onLoadedImage = e => {\n    const image = e.target;\n    const {\n      width,\n      height\n    } = image;\n\n    if (width === size[0] && width === size[1]) {\n      // image dimensions haven't changes\n      // no need to perform the update\n      return;\n    }\n\n    setSize([width, height]);\n  };\n\n  return __jsx(\"article\", {\n    className: classnames(className, {\n      hover: isMouseOver,\n      loading: isLoading\n    })\n  }, __jsx(\"div\", {\n    className: \"head\"\n  }, __jsx(\"img\", {\n    onMouseEnter: () => setMouseOver(true),\n    onMouseLeave: () => setMouseOver(false),\n    style: {\n      transform: `scale(${imageScale})`\n    },\n    src: imageUrl,\n    alt: `Breed: ${name}`,\n    onLoad: onLoadedImage\n  })), __jsx(\"div\", {\n    className: \"body\"\n  }, __jsx(\"h4\", null, name)));\n};\n\nexport default styled(CatThumbnail).withConfig({\n  displayName: \"CatThumbnail\",\n  componentId: \"sc-1inwxc8-0\"\n})([\"position:relative;display:flex;flex-direction:column;.head{width:100%;position:relative;overflow:hidden;padding-top:70%;border-radius:10px;cursor:pointer;}img{position:absolute;top:0;left:0;width:100%;}img.loaded{transition:transform 0.1s ease-in;}img,.body{transition:opacity 1s ease-in;}&.loading img,&.loading .body{opacity:0;}h4{margin:10px 0 0 0;}\"]);","map":null,"metadata":{},"sourceType":"module"}