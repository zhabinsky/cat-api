{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport { Button } from '../ui';\n\nconst Card = props => {\n  const {\n    picture,\n    className\n  } = props;\n  /**\n   * We check what orientation Image is to apply different\n   * styling optinon to insure that the image covers the thumbnail fully\n   *\n   * For now, we will assume that the image is square\n   */\n\n  const [size, setSize] = React.useState([1, 1]);\n  const [isMouseOver, setMouseOver] = React.useState(false);\n  const [allowAnimations, setAllowAnimations] = React.useState(false); // if image is horizontal, we scale it up to fill the container\n\n  const imageScale = (isMouseOver ? 0.08 : 0) + Math.max(size[0] / size[1] / 0.8, 1);\n  const imageUrl = `/public-assets/${picture}`;\n  const isLoading = size[0] === 1;\n\n  const onLoadedImage = e => {\n    const image = e.target;\n    const {\n      width,\n      height\n    } = image;\n\n    if (width === size[0] && width === size[1]) {\n      // image dimensions haven't changes\n      // no need to perform the update\n      return;\n    }\n\n    setSize([width, height]);\n  };\n\n  React.useEffect(() => {\n    // we will allow hovering animations when Image has finished loading\n    // and we know its dimensions, this is done to avoid flickering while resizing\n    if (!allowAnimations && !allowAnimations) {\n      setTimeout(() => setAllowAnimations(true), 500);\n    }\n  }, [isLoading]);\n  return __jsx(\"article\", {\n    className: classnames(className, {\n      hover: isMouseOver,\n      loading: isLoading,\n      'animations-allowed': allowAnimations\n    }),\n    onMouseEnter: () => setMouseOver(true),\n    onMouseLeave: () => setMouseOver(false)\n  }, __jsx(\"div\", {\n    className: \"head\"\n  }, __jsx(\"div\", {\n    className: \"avatar\"\n  }, __jsx(\"span\", null, name[0])), __jsx(\"div\", {\n    className: \"title-block\"\n  }, __jsx(\"span\", {\n    className: \"main\"\n  }, name), __jsx(\"div\", null, 'asdfasdf'))), __jsx(\"div\", {\n    className: \"picture\"\n  }, __jsx(\"img\", {\n    style: {\n      transform: `scale(${imageScale})`\n    },\n    src: imageUrl,\n    alt: `Breed: ${name}`,\n    onLoad: onLoadedImage\n  })), __jsx(\"div\", {\n    className: \"body\"\n  }, __jsx(\"div\", {\n    className: \"description\"\n  }, 'aoshdfo hasduf idhfiuas dfiu hasiduhf asd fasdf asdf asdf asdf '), __jsx(\"div\", {\n    className: \"like-section\"\n  }, __jsx(Button, {\n    square: true,\n    backgroundColor: 'coral'\n  }, __jsx(\"svg\", {\n    viewBox: \"0 0 24 24\",\n    \"aria-hidden\": \"true\"\n  }, __jsx(\"path\", {\n    d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n  }))), \"Favoured 5 times!\")));\n};\n\nexport default styled(Card).withConfig({\n  displayName: \"Card\",\n  componentId: \"sc-1vcisw7-0\"\n})([\"\"]);","map":{"version":3,"sources":["/Users/vladislavzhabinsky/coding/job-applications/telia/app/client/ui/Card.tsx"],"names":["React","styled","classnames","Button","Card","props","picture","className","size","setSize","useState","isMouseOver","setMouseOver","allowAnimations","setAllowAnimations","imageScale","Math","max","imageUrl","isLoading","onLoadedImage","e","image","target","width","height","useEffect","setTimeout","hover","loading","name","transform"],"mappings":"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","sourcesContent":["import React,{ FunctionComponent,SyntheticEvent } from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport { Button } from '../ui';\n\ninterface Props {\n\tclassName?: string;\n\tchildren?: any;\n\tpicture: string;\n}\n\nconst Card: FunctionComponent<Props> = (props: Props) => {\n\n\tconst { picture,className } = props;\n\t/**\n\t * We check what orientation Image is to apply different\n\t * styling optinon to insure that the image covers the thumbnail fully\n\t *\n\t * For now, we will assume that the image is square\n\t */\n\tconst [size,setSize] = React.useState([1,1]);\n\tconst [isMouseOver,setMouseOver] = React.useState(false);\n\n\tconst [allowAnimations,setAllowAnimations] = React.useState(false);\n\n\t// if image is horizontal, we scale it up to fill the container\n\tconst imageScale = (isMouseOver ? 0.08 : 0) + Math.max(size[0] / size[1] / 0.8,1);\n\tconst imageUrl = `/public-assets/${picture}`;\n\tconst isLoading = size[0] === 1;\n\n\tconst onLoadedImage = (e: SyntheticEvent<HTMLImageElement,Event>) => {\n\t\tconst image = (e.target as unknown) as HTMLImageElement;\n\t\tconst { width,height } = image;\n\t\tif(width === size[0] && width === size[1]) {\n\t\t\t// image dimensions haven't changes\n\t\t\t// no need to perform the update\n\t\t\treturn;\n\t\t}\n\t\tsetSize([width,height]);\n\t};\n\n\tReact.useEffect(() => {\n\t\t// we will allow hovering animations when Image has finished loading\n\t\t// and we know its dimensions, this is done to avoid flickering while resizing\n\t\tif(!allowAnimations && !allowAnimations) {\n\t\t\tsetTimeout(() => setAllowAnimations(true),500);\n\t\t}\n\t},[isLoading]);\n\n\treturn (\n\t\t<article className={classnames(className,{ hover: isMouseOver,loading: isLoading,'animations-allowed': allowAnimations })} onMouseEnter={() => setMouseOver(true)} onMouseLeave={() => setMouseOver(false)}>\n\t\t\t<div className=\"head\">\n\t\t\t\t<div className=\"avatar\">\n\t\t\t\t\t<span>{name[0]}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"title-block\">\n\t\t\t\t\t<span className=\"main\">{name}</span>\n\t\t\t\t\t<div>{'asdfasdf'}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"picture\">\n\t\t\t\t<img style={{ transform: `scale(${imageScale})` }} src={imageUrl} alt={`Breed: ${name}`} onLoad={onLoadedImage} />\n\t\t\t</div>\n\t\t\t<div className=\"body\">\n\t\t\t\t<div className=\"description\">{'aoshdfo hasduf idhfiuas dfiu hasiduhf asd fasdf asdf asdf asdf '}</div>\n\t\t\t\t<div className=\"like-section\">\n\t\t\t\t\t<Button square={true} backgroundColor={'coral'}>\n\t\t\t\t\t\t<svg viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"></path></svg>\n\t\t\t\t\t</Button>\n\t\t\t\t\tFavoured 5 times!\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default styled(Card)`\n\n`;\n"]},"metadata":{},"sourceType":"module"}